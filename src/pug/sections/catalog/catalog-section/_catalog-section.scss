@forward "@styles/_extends/flexbox.scss";
@forward "@styles/_extends/effects.scss";
@forward "@styles/_extends/resets.scss";
@use "@styles/_mixins/container-queries" as *;
@use "@styles/_mixins/media-queries" as *;
@use "@styles/_vars/scoped" as *;

@use "@pug/components/_ui/sort/sort";
@use "@pug/components/blocks/filter/filter";

.catalog-section {
	container: catalog-grid / inline-size;

	.base-section__header {
		flex-wrap: nowrap;
		gap: 20px;
		justify-content: space-between;

		@include media-equal-down($mobile-width) {
			flex-direction: column;
			align-items: flex-start;
			gap: 10px;
		}
	}

	&__sort {
		margin-bottom: 20px;
	}

	.filter-opener-btn {
		svg {
			width: 24px;
			height: 24px;
			fill: var(--primary);
		}

		&:hover,
		&:focus {
			background-color: var(--hover-dop-color);
			color: var(--primary);

			svg {
				fill: var(--primary);
			}
		}

		&.active {
			background-color: var(--primary);
			color: var(--light);

			svg {
				fill: var(--light);
			}
		}

		// @include container-down("main", $mobile-width) {
		// 	width: 100%;
		// 	max-width: 100%;
		// 	background-color: var(--primary);
		// 	color: var(--light);
		// 	margin-bottom: 10px;

		// 	svg {
		// 		fill: var(--light);
		// 	}
		// }
	}

	&__grid {
		display: grid;
		grid-template-columns: 1fr;
		gap: 40px 1px;
		margin-bottom: 40px;

		@include container-up("catalog-grid", 420px) {
			grid-template-columns: repeat(2, 1fr);
		}

		@include container-up("catalog-grid", $tablet-width) {
			grid-template-columns: repeat(3, 1fr);
		}

		@include container-up("catalog-grid", $tablet-lg-width) {
			grid-template-columns: repeat(4, 1fr);
		}

		&-item {
			width: 100%;
		}
	}
}
